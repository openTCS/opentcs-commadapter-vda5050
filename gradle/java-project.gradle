// SPDX-FileCopyrightText: The openTCS Authors
// SPDX-License-Identifier: MIT

apply plugin: 'java'
apply plugin: 'com.diffplug.spotless'

base.archivesName = name.toLowerCase()

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation libs.slf4j.api

  compileOnly libs.google.code.findbugs
  testCompileOnly libs.google.code.findbugs

  testImplementation libs.junit.jupiter.api
  testImplementation libs.junit.jupiter.params
  testRuntimeOnly libs.junit.jupiter.engine
  testRuntimeOnly libs.junit.platform.launcher

  testImplementation libs.hamcrest
  testImplementation libs.mockito
  testImplementation libs.assertj
  testImplementation libs.approvaltests

  testRuntimeOnly libs.slf4j.simple
}

compileJava {
  options.release = 21
  options.compilerArgs << "-Xlint:all"
  options.compilerArgs << "-Xlint:-serial"
}

compileTestJava {
  options.release = 21
  options.compilerArgs << "-Xlint:all"
  options.compilerArgs << "-Xlint:-serial"
}

javadoc {
  title = "openTCS VDA5050 Communication Adapter ${project.version} API documentation: ${project.name}"

  options {
    header = "openTCS VDA5050 Communication Adapter ${project.version}"
    addBooleanOption('Xdoclint:none', true)
  }
}
test {
  useJUnitPlatform()
  // ignoreFailures = true
  systemProperties.put("java.awt.headless", "true")
}

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

spotless {
  java {
    // Use the default import order configuration
    importOrder()

    // Use the Eclipse JDT formatter
    eclipse('4.26').configFile("${rootDir}/config/eclipse-formatter-preferences.xml")
  }
}
